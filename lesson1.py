from __future__ import print_function
import torch
import numpy as np
x = torch.empty(5,3)
print(x)
x = torch.rand(5,3)
print(x)
x = torch.zeros(5,3, dtype=torch.double)
print(type(x))
x = torch.tensor([1,2,3,4])
print(x)
x = torch.randn_like(x, dtype=torch.float)
print(x.shape[0])
print(x.size()[0])
print(x.size() == x.shape)
y = torch.randn_like(x)
print(x)
print(y)
result = torch.empty(x.size())
print(x + y)
print(torch.add(x, y, out=result))
print(result)
print(y.add_(x))
print(y)
x = torch.randn(4,4)
y = x.view(16)
z = x.view(-1, 8)
print(x.size(),y.size(),z.size())
# print(x.item())
print(type(x.numpy()))
a = np.ones(5)
b = torch.from_numpy(a)
np.dot(a, 12, out=a)
print(a)
print(b)
print('---')
print(torch.cuda.is_available())
if torch.cuda.is_available():
    device = torch.device("cuda")
    y = torch.ones_like(x, device=device)
    x = x.to(device)
    z = x + y
    print(z)
    print(z.to('cpu', torch.double))

